SecRule REQUEST_URI "@rx ^.*/([^/]+)$" \
    "id:100079,phase:2,log,auditlog,pass,capture,\
    setvar:'tx.raw_urlpath_value=%{TX.1}',\
    msg:'Captured URL path value: %{TX.raw_urlpath_value}'"

SecRule TX:raw_urlpath_value "@rx .+" \
    "id:100080,phase:2,log,auditlog,pass,t:base64Decode,t:htmlEntityDecode,capture,\
    setvar:'tx.base64_decoded_value=%{MATCHED_VAR}',\
    msg:'Base64-decoded value: %{TX.base64_decoded_value}'"

SecRule TX:raw_urlpath_value|TX:base64_decoded_value "@rx (?i)(\.\.\/|\.\.\\\\|\/|\\\\).*?(etc\/passwd|ntuser\.dat|c\$\S*)" \
    "id:100081,phase:2,log,auditlog,block,\
    msg:'Detected XSS in URL path payload',severity:CRITICAL,\
    tag:'paranoia-level/4',\
    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'"
    

#HTMLMultiPartForm
SecRule ARGS "@rx .+" \
    "id:100082,phase:2,log,auditlog,pass,capture,\
    setvar:'tx.raw_arg_value=%{MATCHED_VAR}',\
    msg:'Captured raw argument value: %{TX.raw_arg_value}'"

# Step 2: Decode the captured payload as Base64
SecRule TX:raw_arg_value "@rx .+" \
    "id:100083,phase:2,log,auditlog,pass,t:base64Decode,t:htmlEntityDecode,capture,\
    setvar:'tx.base64_decoded_value=%{MATCHED_VAR}',\
    msg:'Base64-decoded value: %{TX.base64_decoded_value}'"

# Step 3: Decode the captured payload as URL-encoded
SecRule TX:raw_arg_value "@rx .+" \
    "id:100084,phase:2,log,auditlog,pass,t:urlDecodeUni,capture,\
    setvar:'tx.url_decoded_value=%{MATCHED_VAR}',\
    msg:'URL-decoded value: %{TX.url_decoded_value}'"

# Step 4: Inspect both decoded values for malicious XSS patterns
SecRule TX:base64_decoded_value|TX:url_decoded_value "@rx (?i)(\.\.\/|\.\.\\\\|\/|\\\\).*?(etc\/passwd|ntuser\.dat|c\$\S*)" \
    "id:100085,phase:2,log,auditlog,block,\
    msg:'Decoded payload contains malicious XSS',severity:CRITICAL,\
    tag:'paranoia-level/4',\
    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'"


#HTMLForm 

SecRule ARGS "@rx .+" \
    "id:100086,phase:2,log,auditlog,pass,capture,\
    setvar:'tx.raw_htmlform_value=%{MATCHED_VAR}',\
    msg:'Captured HTML Form value: %{TX.raw_htmlform_value}'"

# Step 2: Decode the captured value as Base64
SecRule TX:raw_htmlform_value "@rx .+" \
    "id:100087,phase:2,log,auditlog,pass,t:base64Decode,t:htmlEntityDecode,capture,\
    setvar:'tx.base64_decoded_value=%{MATCHED_VAR}',\
    msg:'Base64-decoded value: %{TX.base64_decoded_value}'"

# Step 3: Inspect both the automatically URL-decoded value and Base64-decoded value for malicious XSS patterns
SecRule TX:raw_htmlform_value|TX:base64_decoded_value "@rx (?i)(\.\.\/|\.\.\\\\|\/|\\\\).*?(etc\/passwd|ntuser\.dat|c\$\S*)" \
    "id:100088,phase:2,log,auditlog,block,\
    msg:'Detected XSS in HTML Form payload',severity:CRITICAL,\
    tag:'paranoia-level/4',\
    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'"

#URLParam 

SecRule ARGS_GET "@rx .+" \
    "id:100089,phase:2,log,auditlog,pass,capture,\
    setvar:'tx.raw_urlparam_value=%{MATCHED_VAR}',\
    msg:'Captured URL parameter value: %{TX.raw_urlparam_value}'"

# Step 2: Decode the captured value as Base64
SecRule TX:raw_urlparam_value "@rx .+" \
    "id:100090,phase:2,log,auditlog,pass,t:base64Decode,t:htmlEntityDecode,capture,\
    setvar:'tx.base64_decoded_value=%{MATCHED_VAR}',\
    msg:'Base64-decoded value: %{TX.base64_decoded_value}'"

# Step 3: Inspect both the automatically URL-decoded value and Base64-decoded value for malicious XSS patterns
SecRule TX:raw_urlparam_value|TX:base64_decoded_value "@rx (?i)(\.\.\/|\.\.\\\\|\/|\\\\).*?(etc\/passwd|ntuser\.dat|c\$\S*)" \
    "id:100091,phase:2,log,auditlog,block,\
    msg:'Detected XSS in URL parameter payload',severity:CRITICAL,\
    tag:'paranoia-level/4',\
    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'"


#JSONRequest


SecRule ARGS "@rx .+" \
    "id:100092,phase:2,log,auditlog,pass,capture,\
    setvar:'tx.raw_arg_value=%{MATCHED_VAR}',\
    msg:'Captured raw argument value: %{TX.raw_arg_value}'"

# Step 2: Decode the captured payload as Base64
SecRule TX:raw_arg_value "@rx .+" \
    "id:100093,phase:2,log,auditlog,pass,t:base64Decode,t:htmlEntityDecode,capture,\
    setvar:'tx.base64_decoded_value=%{MATCHED_VAR}',\
    msg:'Base64-decoded value: %{TX.base64_decoded_value}'"

# Step 3: Decode the captured payload as URL-encoded
SecRule TX:raw_arg_value "@rx .+" \
    "id:100094,phase:2,log,auditlog,pass,t:urlDecodeUni,capture,\
    setvar:'tx.url_decoded_value=%{MATCHED_VAR}',\
    msg:'URL-decoded value: %{TX.url_decoded_value}'"

# Step 4: Inspect both decoded values for malicious XSS patterns
SecRule TX:base64_decoded_value|TX:url_decoded_value "@rx (?i)(\.\.\/|\.\.\\\\|\/|\\\\).*?(etc\/passwd|ntuser\.dat|c\$\S*)" \
    "id:100095,phase:2,log,auditlog,block,\
    msg:'Decoded payload contains malicious XSS',severity:CRITICAL,\
    tag:'paranoia-level/4',\
    setvar:'tx.xss_score=+%{tx.critical_anomaly_score}',\
    setvar:'tx.inbound_anomaly_score_pl4=+%{tx.critical_anomaly_score}'"
